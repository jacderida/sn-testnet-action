name: "SAFE Network Testnet Workflow Action"
description: "GitHub action to use the sn_testnet_tool repository to deploy a testnet"
inputs:
  action:
    description: "Task to be carried out. Accepts 'create' or 'destroy'."
    default: "create"
  ansible-vault-password:
    description: Password for Ansible vault.
    required: true
  aws-access-key-id:
    description: "AWS access key ID"
  aws-access-key-secret:
    description: "AWS access key"
  aws-region:
    description: "AWS region"
  custom-node-bin-org-name:
    description: >
      If using a custom node binary, set this to the name of the org or username of the repository.
      The repository will be cloned and the binary will be built.
  custom-node-bin-branch-name:
    description: >
      If using a custom node binary, set this to the branch on the repository you want to use.
      The repository will be cloned and the binary will be built using this branch.
  do-token:
    description: "Digital Ocean Authorization token"
  name:
    description: "The name of the testnet"
    required: true
  node-count:
    description: "Number of node VMs to be deployed"
    required: true
  node-instance-count:
    description: "Number of nodes service instances to be started"
    required: true
  provider:
    description: "The cloud provider. Valid values are 'aws' or 'digital-ocean'."
    required: true
  ssh-secret-key:
    description: "SSH key used to run the nodes on the Digital Ocean droplets"
    required: true
  subnet-id:
    description: If running on AWS, this is the subnet of the VPC on which the VMs will be created.
  security-group-id:
    description: If running on AWS, this is the ID of the security groups the VMs will use.
  testnet-name:
    description: The name of the testnet.
    required: true
  testnet-tool-repo-branch:
    description: >
      The branch for the testnet tool repository. This is to enable using forks to test changes to
      the testnet tool. Will default to the `digital-ocean-refactor` branch.
    default: "main"
  testnet-tool-repo-user:
    description: >
      The user or organisation for the testnet tool repository. This is to enable using forks to
      test changes to the testnet tool. Will default to the `jacderida`.
    default: "maidsafe"

runs:
  using: "composite"
  steps:
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
    - name: install tools
      env:
        JUST_BIN_URL: https://github.com/casey/just/releases/download/1.13.0/just-1.13.0-x86_64-unknown-linux-musl.tar.gz
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y bsdmainutils curl jq less unzip
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip >/dev/null 2>&1  # Suppress output: it generates lots of noise in the logs.
        sudo ./aws/install --update
        rm -rf aws awscliv2.zip

        pip install --user ansible boto3

        curl -L -O $JUST_BIN_URL
        mkdir just
        tar xvf just-1.13.0-x86_64-unknown-linux-musl.tar.gz -C just
        rm just-1.13.0-x86_64-unknown-linux-musl.tar.gz
        sudo mv just/just /usr/local/bin
        rm -rf just

    - name: Build node and run testnet on Digital Ocean or AWS
      if: inputs.action == 'create'
      env:
        DO_PAT: ${{ inputs.do-token }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-access-key-secret }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
        CUSTOM_BIN_ORG_NAME: ${{ inputs.custom-node-bin-org-name }}
        CUSTOM_BIN_BRANCH_NAME: ${{ inputs.custom-node-bin-branch-name }}
        NODE_COUNT: ${{ inputs.node-count }}
        NODE_INSTANCE_COUNT: ${{ inputs.node-instance-count }}
        PROVIDER: ${{ inputs.provider }}
        SN_TESTNET_DEV_SUBNET_ID: ${{ inputs.subnet-id }}
        SN_TESTNET_DEV_SECURITY_GROUP_ID: ${{ inputs.security-group-id }}
        SSH_KEY_NAME: id_rsa
        TESTNET_NAME: ${{ inputs.testnet-name }}
        TESTNET_TOOL_BRANCH: ${{ inputs.testnet-tool-repo-branch }}
        TESTNET_TOOL_USER: ${{ inputs.testnet-tool-repo-user }}
        TERRAFORM_STATE_BUCKET_NAME: maidsafe-org-infra-tfstate
      shell: bash
      run: |
        set -e
        mkdir ~/.ssh
        echo "${{ inputs.ssh-secret-key }}" >> ~/.ssh/id_rsa
        chmod 0400 ~/.ssh/id_rsa
        ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

        mkdir ~/.ansible
        echo "${{ inputs.ansible-vault-password }}" >> ~/.ansible/vault-password

        git clone --quiet --single-branch --depth 1 \
          --branch $TESTNET_TOOL_BRANCH https://github.com/$TESTNET_TOOL_USER/sn_testnet_tool

        cd sn_testnet_tool

        export PATH=$PATH:/home/runner/.local/bin
        echo "DIGITALOCEAN_TOKEN=${{ env.DO_PAT }}" >> .env
        echo "DO_API_TOKEN=${{ env.DO_PAT }}" >> .env
        echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}" >> .env
        echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }}" >> .env
        echo "DO_PAT=${{ env.DO_PAT }}" >> .env
        echo "SSH_KEY_NAME=${{ env.SSH_KEY_NAME }}" >> .env
        echo "NODE_COUNT=${{ env.NODE_COUNT }}" >> .env
        echo "PATH=$PATH:/home/runner/.local/bin" >> .env
        echo "PROVIDER=${{ env.PROVIDER }}" >> .env
        echo "TESTNET_NAME=${{ env.TESTNET_NAME }}" >> .env
        echo "TESTNET_TOOL_BRANCH=${{ env.TESTNET_TOOL_BRANCH }}" >> .env
        echo "TESTNET_TOOL_USER=${{ env.TESTNET_TOOL_USER }}" >> .env
        echo "SN_TESTNET_DEV_SUBNET_ID=${{ env.SN_TESTNET_DEV_SUBNET_ID}} " >> .env
        echo "SN_TESTNET_DEV_SECURITY_GROUP_ID=${{ env.SN_TESTNET_DEV_SECURITY_GROUP_ID }}" >> .env
        echo "TERRAFORM_STATE_BUCKET_NAME=${{ env.TERRAFORM_STATE_BUCKET_NAME }}" >> .env

        use_custom_bin="false"
        if [[ ! -z "${{ inputs.custom-node-bin-org-name }}" ]]; then
          use_custom_bin="true"
        fi
        just init "$TESTNET_NAME" "$PROVIDER"
        just testnet \
          "$TESTNET_NAME" \
          "$PROVIDER" \
          $NODE_COUNT \
          $NODE_INSTANCE_COUNT \
          "$use_custom_bin" \
          "$CUSTOM_BIN_ORG_NAME" \
          "$CUSTOM_BIN_BRANCH_NAME" \

    - name: Destroy testnet on Digital Ocean or AWS
      if: inputs.action == 'destroy'
      env:
        DO_PAT: ${{ inputs.do-token }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-access-key-secret }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
        NODE_COUNT: ${{ inputs.node-count }}
        PROVIDER: ${{ inputs.provider }}
        SN_TESTNET_DEV_SUBNET_ID: ${{ inputs.subnet-id }}
        SN_TESTNET_DEV_SECURITY_GROUP_ID: ${{ inputs.security-group-id }}
        SSH_KEY_NAME: id_rsa
        TERRAFORM_STATE_BUCKET_NAME: maidsafe-org-infra-tfstate
        TESTNET_NAME: ${{ inputs.testnet-name }}
        TESTNET_TOOL_BRANCH: ${{ inputs.testnet-tool-repo-branch }}
        TESTNET_TOOL_USER: ${{ inputs.testnet-tool-repo-user }}
      shell: bash
      run: |
        set -e
        mkdir ~/.ssh
        echo "${{ inputs.ssh-secret-key }}" >> ~/.ssh/id_rsa
        chmod 0400 ~/.ssh/id_rsa
        ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

        mkdir ~/.ansible
        echo "${{ inputs.ansible-vault-password }}" >> ~/.ansible/vault-password

        git clone --quiet --single-branch --depth 1 \
          --branch $TESTNET_TOOL_BRANCH https://github.com/$TESTNET_TOOL_USER/sn_testnet_tool

        cd sn_testnet_tool

        export PATH=$PATH:/home/runner/.local/bin
        echo "DIGITALOCEAN_TOKEN=${{ env.DO_PAT }}" >> .env
        echo "DO_API_TOKEN=${{ env.DO_PAT }}" >> .env
        echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}" >> .env
        echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}" >> .env
        echo "AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }}" >> .env
        echo "DO_PAT=${{ env.DO_PAT }}" >> .env
        echo "SSH_KEY_NAME=${{ env.SSH_KEY_NAME }}" >> .env
        echo "NODE_COUNT=${{ env.NODE_COUNT }}" >> .env
        echo "PATH=$PATH:/home/runner/.local/bin" >> .env
        echo "PROVIDER=${{ env.PROVIDER }}" >> .env
        echo "TESTNET_NAME=${{ env.TESTNET_NAME }}" >> .env
        echo "TESTNET_TOOL_BRANCH=${{ env.TESTNET_TOOL_BRANCH }}" >> .env
        echo "TESTNET_TOOL_USER=${{ env.TESTNET_TOOL_USER }}" >> .env
        echo "SN_TESTNET_DEV_SUBNET_ID=${{ env.SN_TESTNET_DEV_SUBNET_ID}} " >> .env
        echo "SN_TESTNET_DEV_SECURITY_GROUP_ID=${{ env.SN_TESTNET_DEV_SECURITY_GROUP_ID }}" >> .env
        echo "TERRAFORM_STATE_BUCKET_NAME=${{ env.TERRAFORM_STATE_BUCKET_NAME }}" >> .env

        just init "$TESTNET_NAME" "$PROVIDER"
        just clean "$TESTNET_NAME" "$PROVIDER"

branding:
  icon: "globe"
  color: "blue"
